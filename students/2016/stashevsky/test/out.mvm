int x1;
int y;
int z;
function string concat(string s1, string s2) 
{
  string result;
  result = malloc(strlen(s1) + strlen(s2) + 1);
  strcpy(result, s1);
  strcat(result, s2);
  return result;
}
function int foo(int x) 
{
  int r;
  function int bar(int a) 
  {
    int i;
    int j;
    if (a <= 0)
    {
      return z;
    }
    x = baz();
    r += 1;
    return x + bar(a - 1);
    while (x > 0 && x + 1 > y)
    {
      print(x, '\n');
      x -= 1;
    }
    j = 3;
    for (i in -3 .. 4)
    {
      j += i;
      print(i, ' ');
    }
    return 0;
  }
  function int baz() 
  {
    int s;
    function int bak(int z1) 
    {
      int t;
      if (z1 <= 0)
      {
        x = z1;
      }
      else
      {
        y = z1 + 1;
        x = -z1;
      }
      x -= 1;
      t = baz();
      t -= 1;
      if (s < 0)
      {
        s = s * -1;
      }
      x += 1;
      return t + z1 + bar(z1 - y);
    }
    if (x <= 0 || y <= 0 || z <= 0)
    {
      return x + y + z;
    }
    s = foo(x - 1);
    y += s;
    z = bak(z - y + 1);
    z -= 2;
    return s + bar(x);
  }
  if (x == 0)
  {
    int f;
    f = baz();
    return bar(f - 3);
  }
  r = foo(x - 1);
  bar(r);
  return r + baz();
}
function string malloc(int len) native 'malloc';
function string strcat(string s1, string s2) native 'strcat';
function string strcpy(string dst, string src) native 'strcpy';
x1 = 2;
y = 2;
z = 2;
print(foo(2), '\n');
print(x1, '\n', y, '\n', z, '\n');
print(1, '\n');
print(-2, '\n');
print(1e+08, '\n');
print(1e-08, '\n');
